sing BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, ["libscsindir"], :indirect),
    LibraryProduct(prefix, ["libscsdir"], :direct),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/JuliaOpt/SCSBuilder/releases/download/v2.0.2-1"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, libc=:glibc, compiler_abi=CompilerABI(:gcc4)) => ("$bin_prefix/SCSBuilder.v2.0.2.aarch64-linux-gnu-gcc4.tar.gz", "05aba1b3d1e20a951f5b7a923120d4f174fba0c5c9c59a27fe38d83c0dc45079"),
    Linux(:aarch64, libc=:glibc, compiler_abi=CompilerABI(:gcc7)) => ("$bin_prefix/SCSBuilder.v2.0.2.aarch64-linux-gnu-gcc7.tar.gz", "7402d13a3576b6ccfcce4e90c64e71b5c4edfc2d34670b1b7660ec79b5d08709"),
    Linux(:aarch64, libc=:glibc, compiler_abi=CompilerABI(:gcc8)) => ("$bin_prefix/SCSBuilder.v2.0.2.aarch64-linux-gnu-gcc8.tar.gz", "9e0209b303c008c1b7d913e7274fbfcab83112efef552a4f736cdbd8e7334310"),
    Linux(:aarch64, libc=:musl, compiler_abi=CompilerABI(:gcc4)) => ("$bin_prefix/SCSBuilder.v2.0.2.aarch64-linux-musl-gcc4.tar.gz", "166142a8d35980a3b86f16e7fc840a93dfd220eb54790f26007e49bcfd71ef57"),
    Linux(:aarch64, libc=:musl, compiler_abi=CompilerABI(:gcc7)) => ("$bin_prefix/SCSBuilder.v2.0.2.aarch64-linux-musl-gcc7.tar.gz", "a83395bc92d62e091a608bae7f0312ecbab05321e111b7544041e534d944b92a"),
    Linux(:aarch64, libc=:musl, compiler_abi=CompilerABI(:gcc8)) => ("$bin_prefix/SCSBuilder.v2.0.2.aarch64-linux-musl-gcc8.tar.gz", "b00c89ffe666ceee57d298c2d1253ec876d77bd8aee4517608d9926aeda43019"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf, compiler_abi=CompilerABI(:gcc4)) => ("$bin_prefix/SCSBuilder.v2.0.2.arm-linux-gnueabihf-gcc4.tar.gz", "77dc416a127cba570dcc4cd7d3e6346b9892ba86bc7b8d2e6ba120b94b848264"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf, compiler_abi=CompilerABI(:gcc7)) => ("$bin_prefix/SCSBuilder.v2.0.2.arm-linux-gnueabihf-gcc7.tar.gz", "e92c84940093e2843f0296859e1a9d8b49f705f287f03fbed16b8a79496cdc92"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf, compiler_abi=CompilerABI(:gcc8)) => ("$bin_prefix/SCSBuilder.v2.0.2.arm-linux-gnueabihf-gcc8.tar.gz", "0468168d4a048ad95cf75e337803d69f9b9b1fa556b80fce52fc097b61173771"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf, compiler_abi=CompilerABI(:gcc4)) => ("$bin_prefix/SCSBuilder.v2.0.2.arm-linux-musleabihf-gcc4.tar.gz", "f761211cc445771833fa2434450e64579fd4c7b7d9c2b933096133b59f0536f9"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf, compiler_abi=CompilerABI(:gcc7)) => ("$bin_prefix/SCSBuilder.v2.0.2.arm-linux-musleabihf-gcc7.tar.gz", "69abf80ff07586873bc6738c8d5c9f70b4d57592cbb623b012e323ab50a7ad83"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf, compiler_abi=CompilerABI(:gcc8)) => ("$bin_prefix/SCSBuilder.v2.0.2.arm-linux-musleabihf-gcc8.tar.gz", "0812f98ee20d67cc24e393673a3c185b25fdc3cf294f4c26faf59bcf54934a0e"),
    Linux(:i686, libc=:glibc, compiler_abi=CompilerABI(:gcc4)) => ("$bin_prefix/SCSBuilder.v2.0.2.i686-linux-gnu-gcc4.tar.gz", "9ce1d413e16f8c8f5a195045e29ac987f30a338ed52d9ab55d3f3e044b4c27e6"),
    Linux(:i686, libc=:glibc, compiler_abi=CompilerABI(:gcc7)) => ("$bin_prefix/SCSBuilder.v2.0.2.i686-linux-gnu-gcc7.tar.gz", "37ed4c9e01542a677d46d3f75963e505ee3b02d0ff7a09f330a325116c688ee4"),
    Linux(:i686, libc=:glibc, compiler_abi=CompilerABI(:gcc8)) => ("$bin_prefix/SCSBuilder.v2.0.2.i686-linux-gnu-gcc8.tar.gz", "e0318feb8298969d4b89558f48f93d7e04ea84cc319ea663e97f1f3fbabb7fac"),
    Linux(:i686, libc=:musl, compiler_abi=CompilerABI(:gcc4)) => ("$bin_prefix/SCSBuilder.v2.0.2.i686-linux-musl-gcc4.tar.gz", "63835663c6650fd388d1f5b511cc3afd5648ff52ecb3ca37edd1f2fbe6710e5b"),
    Linux(:i686, libc=:musl, compiler_abi=CompilerABI(:gcc7)) => ("$bin_prefix/SCSBuilder.v2.0.2.i686-linux-musl-gcc7.tar.gz", "57aafeacbfabf4d539d5374164c1a8acf16053ffc9687ee0d55516df3e919821"),
    Linux(:i686, libc=:musl, compiler_abi=CompilerABI(:gcc8)) => ("$bin_prefix/SCSBuilder.v2.0.2.i686-linux-musl-gcc8.tar.gz", "498704db44bf3717a5b23eb489be3358693bce9686e4411debc4db7e49ce6728"),
    Windows(:i686, compiler_abi=CompilerABI(:gcc4)) => ("$bin_prefix/SCSBuilder.v2.0.2.i686-w64-mingw32-gcc4.tar.gz", "e49db3f3651fca7d869e00d6d9a4aedb00aae7bc1345a31255add466adc1fafb"),
    Windows(:i686, compiler_abi=CompilerABI(:gcc7)) => ("$bin_prefix/SCSBuilder.v2.0.2.i686-w64-mingw32-gcc7.tar.gz", "ef66db09292fc2187d7168845cbd198dab68bb1d230cc2d2e5440e082a02b615"),
    Windows(:i686, compiler_abi=CompilerABI(:gcc8)) => ("$bin_prefix/SCSBuilder.v2.0.2.i686-w64-mingw32-gcc8.tar.gz", "ccc789f8bf8e4ecd296af9c5d22b108a5aead7e06dd2579fa30185153ebf31b8"),
    Linux(:powerpc64le, libc=:glibc, compiler_abi=CompilerABI(:gcc4)) => ("$bin_prefix/SCSBuilder.v2.0.2.powerpc64le-linux-gnu-gcc4.tar.gz", "0f3d5c4b2a60a5f648edd160c6177c60a1f37e87bc89aa8edb9611d6fd9e9976"),
    Linux(:powerpc64le, libc=:glibc, compiler_abi=CompilerABI(:gcc7)) => ("$bin_prefix/SCSBuilder.v2.0.2.powerpc64le-linux-gnu-gcc7.tar.gz", "9635a4cb0409f3b75f310b83cb013d38bd527eef490cdb6ec509f5dc1add5bb1"),
    Linux(:powerpc64le, libc=:glibc, compiler_abi=CompilerABI(:gcc8)) => ("$bin_prefix/SCSBuilder.v2.0.2.powerpc64le-linux-gnu-gcc8.tar.gz", "13d2203073b3d3d64eb729fbdcfad9f66e979874d36bb064f7724366f04a9bee"),
    MacOS(:x86_64, compiler_abi=CompilerABI(:gcc4)) => ("$bin_prefix/SCSBuilder.v2.0.2.x86_64-apple-darwin14-gcc4.tar.gz", "1386ac56ae09bcd48edb9c993ec8d6b3a4d4e211b8b1d4a89e2a12f3a63caec5"),
    MacOS(:x86_64, compiler_abi=CompilerABI(:gcc7)) => ("$bin_prefix/SCSBuilder.v2.0.2.x86_64-apple-darwin14-gcc7.tar.gz", "c803214e2bdee883a07e85d9773781278de916351e2977f7574f1ecd478a1f46"),
    MacOS(:x86_64, compiler_abi=CompilerABI(:gcc8)) => ("$bin_prefix/SCSBuilder.v2.0.2.x86_64-apple-darwin14-gcc8.tar.gz", "24ae6cb899d6cb283a49cad0e7771e669efa62fda8560d523a1ea6b1442d8b67"),
    Linux(:x86_64, libc=:glibc, compiler_abi=CompilerABI(:gcc4)) => ("$bin_prefix/SCSBuilder.v2.0.2.x86_64-linux-gnu-gcc4.tar.gz", "2c8ab3f34e34f045d8cfff146df2ce6ceed052c2060e3aa0376812b07a09022e"),
    Linux(:x86_64, libc=:glibc, compiler_abi=CompilerABI(:gcc7)) => ("$bin_prefix/SCSBuilder.v2.0.2.x86_64-linux-gnu-gcc7.tar.gz", "b74c7130e861b46cc8cf6c50c0c072270c7722d92c58638d1e62d31289ce176e"),
    Linux(:x86_64, libc=:glibc, compiler_abi=CompilerABI(:gcc8)) => ("$bin_prefix/SCSBuilder.v2.0.2.x86_64-linux-gnu-gcc8.tar.gz", "a2218a782ce44b20eaaf7e749fa2fdcd7adfd4788a377aaf0788462635a8f666"),
    Linux(:x86_64, libc=:musl, compiler_abi=CompilerABI(:gcc4)) => ("$bin_prefix/SCSBuilder.v2.0.2.x86_64-linux-musl-gcc4.tar.gz", "ec4399522ba18a252a8ed6957937e79f48b476626ef0992ce1de7e87b1b1017b"),
    Linux(:x86_64, libc=:musl, compiler_abi=CompilerABI(:gcc7)) => ("$bin_prefix/SCSBuilder.v2.0.2.x86_64-linux-musl-gcc7.tar.gz", "77fc3c84f4d3a82a4f2e6b0677fffbee2be50c1169f7535e367352c4f5d1f401"),
    Linux(:x86_64, libc=:musl, compiler_abi=CompilerABI(:gcc8)) => ("$bin_prefix/SCSBuilder.v2.0.2.x86_64-linux-musl-gcc8.tar.gz", "9c25276005be147d7440471f3947fa94cd56c1db9f33de1a441816f736e0576b"),
    FreeBSD(:x86_64, compiler_abi=CompilerABI(:gcc4)) => ("$bin_prefix/SCSBuilder.v2.0.2.x86_64-unknown-freebsd11.1-gcc4.tar.gz", "574e9fd5fc1766a032919e0222b9e1d7d74c1aade665936cf878a9d87499051a"),
    FreeBSD(:x86_64, compiler_abi=CompilerABI(:gcc7)) => ("$bin_prefix/SCSBuilder.v2.0.2.x86_64-unknown-freebsd11.1-gcc7.tar.gz", "a167740c55129a873c01e9c08be7957c6e9dde5893a8ab442f90db3324951d20"),
    FreeBSD(:x86_64, compiler_abi=CompilerABI(:gcc8)) => ("$bin_prefix/SCSBuilder.v2.0.2.x86_64-unknown-freebsd11.1-gcc8.tar.gz", "3e79a4c8b530ca86c7ac62efacccabe34067bc099f6f0c3fe6d025f6e7aa9db2"),
    Windows(:x86_64, compiler_abi=CompilerABI(:gcc4)) => ("$bin_prefix/SCSBuilder.v2.0.2.x86_64-w64-mingw32-gcc4.tar.gz", "7c078150f36ea13d5203b5d1138d43bb7d3e40c93d0a314fda3891e0b38dcd01"),
    Windows(:x86_64, compiler_abi=CompilerABI(:gcc7)) => ("$bin_prefix/SCSBuilder.v2.0.2.x86_64-w64-mingw32-gcc7.tar.gz", "09ee238904981da4e8839820c68fd1e6142649347066f9d80f00f4a47ff4b98f"),
    Windows(:x86_64, compiler_abi=CompilerABI(:gcc8)) => ("$bin_prefix/SCSBuilder.v2.0.2.x86_64-w64-mingw32-gcc8.tar.gz", "28a20d93a702f34d5c86748b705d5777eb49a3fd973762575ba598b5bc3a95bd"),
)

this_platform = platform_key_abi()
                  
custom_library = false
if haskey(ENV,"JULIA_SCS_LIBRARY_PATH")
    custom_products = [LibraryProduct(ENV["JULIA_SCS_LIBRARY_PATH"],product.libnames,product.variable_name) for product in products]
    if all(satisfied(p; verbose=verbose) for p in custom_products)
        products = custom_products
        custom_library = true
    else
        error("Could not install custom libraries from $(ENV["JULIA_SCS_LIBRARY_PATH"]).\nTo fall back to BinaryProvider call delete!(ENV,\"JULIA_SCS_LIBRARY_PATH\") and run build again.")
    end
end

if !custom_library
    # Install unsatisfied or updated dependencies:
    unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)

    dl_info = choose_download(download_info, this_platform)
    if dl_info === nothing && unsatisfied
        # If we don't have a compatible .tar.gz to download, complain.
        # Alternatively, you could attempt to install from a separate provider,
        # build from source or something even more ambitious here.
        error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
    end

    # If we have a download, and we are unsatisfied (or the version we're
    # trying to install is not itself installed) then load it up!
    if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
        # Download and install binaries
        install(dl_info...; prefix=prefix, force=true, verbose=verbose)
    end
 end
                    
# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)
